机体角度任务，声明BodyOriTask类，公有继承自Task类


>>>>>>> BodyOriTask<T>::BodyOriTask(const FloatingBaseModel<T>* robot)
    函数功能：构造函数，初始化参数，设定任务的维度为3
            设定任务的雅可比矩阵Jt_维度为dim_task_ x dim_config(即3x18)
            将Jt_对应位置的块设为单位阵
            设定任务的JtDotQdot_为维度为dim_task_(3)的向量
            设定任务的_Kp_kin为维度为dim_task_(3)的全1向量(好像没用)
            设定任务的_Kp为维度为dim_task_(3)的全50向量
            设定任务的_Kd为维度为dim_task_(3)的全1向量

>>>>>>> BodyOriTask<T>::~BodyOriTask()
    函数功能：析构函数，空函数

>>>>>>> bool BodyOriTask<T>::_UpdateCommand(const void* pos_des, const DVec<T>& vel_des, const DVec<T>& acc_des)
    函数功能：生成加速度指令，对应《Highly Dynamic Quadruped Locomotion via Whole-Body Impulse Control and Model Predictive Control》论文中的公式(22)
             ori_cmd = pos_des，为机体的期望角度
             link_ori = _robot_sys->_state.bodyOrientation，为机体的当前角度
             op_cmd_ = _Kp * ori_err_so3 + _Kd * vel_err + TK::acc_des_

>>>>>>> bool BodyOriTask<T>::_UpdateTaskJacobian()
    函数功能：更新任务的雅可比矩阵Jt_
             这里假设Jt_分为从左至右六部分(因为Jt_的维度为3x18，所以每部分为3x3的方阵)
             更新结束后，Jt_的六个方阵从左至右依次为：R.transpose，0，0，0，0，0
             //TODO ？
             为什么用R.transpose作为第一部分？？？

>>>>>>> bool BodyOriTask<T>::_UpdateTaskJDotQdot()
    函数功能：空函数，直接返回TRUE